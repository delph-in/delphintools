#!/bin/bash

logon_parse_object () {
	object=$1
	
	# we need to reverse the order of the ascii file to parse the target language.
	# currently we keep only the first reference sentence so that the ids will align
	# dump the reversed ascii to the ascii/ directory and set $skeleton to point to
	# it so that the profile is created with target language sentences
	
	object_ascii="$TREEBANK/$name/ascii/$(basename $skeleton).object"
	if [ ! -s "$object_ascii" ]; then
		mkdir -p $TREEBANK/$name/ascii/
#		cp -f $skeleton $TREEBANK/$name/ascii/
		objectify_ascii < $skeleton > $object_ascii
	fi
	export skeleton=$object_ascii
	
	logon_setup_profile $object
	cp -f $LTHOME/makefiles/Makefile.profile $TREEBANK/$object/Makefile
	
	cat 2>&1 <<- OBJECT
		(lkb::read-script-file-aux "$grammarscript")
		(setf *tsdb-trees-hook* "lkb::parse-tree-structure")
	OBJECT
	
	if [ -n "$processor" ]; then
		cat 2>&1 <<- OBJECT
			(tsdb:tsdb :cpu :$processor :file t :count $count $tsdb_options)
		OBJECT
	fi
	
	cat 2>&1 <<- OBJECT
		(tsdb::tsdb :home "$TREEBANK/$object")
		(tsdb::tsdb :list)
		(tsdb::tsdb :process "." :condition "i-wf=1")
	OBJECT
}

logon_parse_object $*
