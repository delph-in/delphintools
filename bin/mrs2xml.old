#!/bin/bash

LOGONROOT=$HOME/logon
unset DISPLAY

setup_erg () {
	GRAMMAR=$LOGONROOT/lingo/erg
	LOCALE=en_US.UTF-8
	SCRIPT=$GRAMMAR/lkb/script
}

setup_jacy () {
	GRAMMAR=$LOGONROOT/dfki/jacy
	LOCALE=ja_JP.UTF-8
	SCRIPT=$GRAMMAR/lkb/script
}

setup_lisp_cmd () {
	cat <<- LISP
		(load "$LOGONROOT/lingo/lkb/src/general/loadup.lisp")
		(pushnew :lkb *features*)
		(pushnew :mrs *features*)
		;; load grammar's LKB script
		(lkb::read-script-file-aux "$SCRIPT")
		(defun file-mrs2xml (filename)
			(let* ((mrs (mrs::read-mrs-from-file filename))
				(xml (with-output-to-string (x)
						(mrs::output-mrs1 mrs 'mrs::mrs-xml x))))
				(with-open-file
					(y (format nil "~a.xml" filename)
						:direction :output :if-exists :supersede)
					(princ xml y))))
	LISP
}

convert_mrs_cmd () {
	for f in $* ; do
		cat <<- LISP
			(file-mrs2xml "$f")
		LISP
	done
}

run_cmds () {
	$LOGONROOT/bin/logon -I base -locale $LOCALE -qq
}

while [ $# -gt 0 -a "${1#-}" != "$1" ]; do
	case ${1} in
		-d|--debug)
			debug=true
			shift 1
		;;
		-e|--erg)
			setup_erg
			shift 1
		;;
		-j|--jacy)
			setup_jacy
			shift 1
		;;
	esac
done

if [ -n "${debug}" ]; then
	setup_lisp_cmd
	convert_mrs_cmd $*
else
	( setup_lisp_cmd; convert_mrs_cmd $* ) | run_cmds
fi
